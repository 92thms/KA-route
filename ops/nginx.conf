user  www-data;
worker_processes  auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        server_name _;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header Referrer-Policy no-referrer always;

        # -------- HEALTH --------
        location = /health {
            # CORS wie gehabt
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Headers * always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Expose-Headers * always;

            # Fix: Plaintext statt application/octet-stream
            default_type text/plain;
            charset utf-8;

            return 200 "ok\n";
        }

        # -------- API -> FastAPI (uvicorn @ 127.0.0.1:8000) --------
location /api/ {
    proxy_pass         http://127.0.0.1:8000/;
    proxy_http_version 1.1;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;

    # CORS & sichtbare Header (mobile ist hier strenger)
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
    add_header Access-Control-Expose-Headers "*" always;

    # Preflight (einige Mobile schicken auch bei GET ein OPTIONS vorher)
    if ($request_method = OPTIONS) { return 204; }

    # >>> WICHTIG für Mobile:
    # 1) Content-Type nicht dem "default_type application/octet-stream" überlassen
    #    sondern immer explizit sichtbar machen
    proxy_hide_header Content-Type;
    add_header        Content-Type "application/json; charset=utf-8" always;

    # 2) Keine Chunked-Fragmente/Buffering, einige Mobile Stacks/Tunnel mögen das nicht
    proxy_buffering          off;
    proxy_request_buffering  off;
    sendfile                 off;

    # 3) Timeouts großzügiger (langsames Mobilnetz)
    proxy_connect_timeout    10s;
    proxy_read_timeout       60s;
    proxy_send_timeout       60s;
}
        # -------- PROXY -> externe Seiten (z.B. kleinanzeigen.de) --------
        resolver 1.1.1.1 1.0.0.1 valid=30s ipv6=off;

        location /proxy {
            set $target $arg_u;
            if ($target = "") { return 400 "missing u"; }

            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Headers * always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Expose-Headers * always;

            # Browser-ähnliche Header
            proxy_set_header User-Agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36";
            proxy_set_header Accept "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
            proxy_set_header Accept-Language "de-DE,de;q=0.9";
            proxy_set_header Referer "https://www.kleinanzeigen.de/";
            proxy_set_header Cache-Control "no-cache";

            # Komprimierung deaktivieren, damit wir sauber parsen können
            proxy_set_header Accept-Encoding "";

            proxy_ssl_server_name on;
            proxy_pass $target;

            # WICHTIG: HTML-Content-Type setzen (kein .bin Download auf Mobile)
            default_type text/html;

            if ($request_method = OPTIONS) { return 204; }
        }

        # -------- Static (optional) --------
        location / {
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Headers * always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
            add_header Access-Control-Expose-Headers * always;

            if ($request_method = OPTIONS) { return 204; }

            root   /usr/share/nginx/html;
            index  route.html;
        }
    }
}
